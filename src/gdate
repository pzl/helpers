#!/bin/bash
# This is an unfinished script that was intended to modify
# a git repo's history to update commit timestamps
#
# Copyright (c) 2014 Dan Panzarella
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE. 


help="Usage: `basename $0` [OPTS] <COMMITS> <DATE>
   or: `basename $0` [OPTS] <COMMITS> -o<OFFSET> <COMMIT>
Change git commit dates

    -h              show this help message and exit
    -a AUTHOR       filter only commits by this author
    -s SEP-TIME     amount of time to separate multiple commits by
    -o OFFSET       time offset from commit as final parameter
    -b              used with -o; offset counts backwards
    -p              prompt before executing
    -q              quiet operation
    -v              verbose mode
"

quiet=false
prompt=false
backwards=false
verbose=false

while getopts :h?a:s:o:bpqv opt; do
    case "$opt" in
    h|\?|\:)
        echo "$help"
        exit 0
        ;;
    a)
        auth=$OPTARG
        ;;
    s)
        sep=$OPTARG
        ;;
    o)
        offset=$OPTARG
        ;;
    b)
        backwards=true
        ;;
    p)
        prompt=true
        ;;
    q)
        quiet=true
        ;;
    v)
        if [[ $quiet == true ]]; then
            echo -e "Error: Cannot be both verbose and quiet" >&2
            #does printing this violate the quiet part?
            exit 1
        fi
        verbose=true
        ;;
    esac
done

if [[ $backwards == true && $offset == "" ]]; then
    echo "Error: -b must be used with an offset (-o)" >&2
    exit 1
fi


commit=${@:$OPTIND:1}
mdate=${@:$OPTIND+1:1}

if [[ $commit == "" || $mdate == "" ]]; then
    echo -e "Error: two positional arguments required\n" >&2
    echo "$help"
    exit 1;
fi

iput="Input:
Commit=$commit
Date=$mdate
Author=$auth
Separator=$sep
Offset=$offset
backwards=$backwards
prompt=$prompt
quiet=$quiet
verbose=$verbose
"

if [[ $verbose == true ]]; then
    echo "$iput"
fi

if [[ $commit =~ .*\-.* ]]; then
    cmlist=$(git rev-list `echo "$commit" | sed 's/\-/\.\.\./'`)
    commit=$(echo "$commit" | sed 's/.*\-//')
    if [[ $cmlist != ""  ]]; then
        cmlist="$cmlist"$'\n'
    fi
    cmlist="$cmlist$(git rev-parse $commit)"
else
    cmlist=$(git rev-parse $commit)
fi
if [ $? -ne 0 ]; then
    echo "Error: failed to parse $commit" >&2
    exit 1
fi

if [[ "$verbose" == true ]]; then
    echo -e "commit list:\n$cmlist"
fi


#git filter-branch -f --env-filter \

#rm -rf "$(git rev-parse --git-dir)/refs/original/"
